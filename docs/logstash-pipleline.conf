input{
    #redis {
    #    data_type => "list"
    #    key => "logstash-monitor"
    #    host => "host"
    #    port => port
    #    threads => 5
    #}
    generator {
        count => 1
        message => 'ela<<<127.0.0.1<<<exception<<<isLive<<<null point<<<balablabalabal'
    }
}
filter {
    #mutate {
    #   remove_field => ["host"]
    #}

    ruby {
        init => "@kname = ['app', 'rhost', 'logTag']"
        code => "event.append(Hash[@kname.zip(event['message'].split('<<<'))])"
    }
    if [logTag] == "reqTime" {
        ruby {
          init => "@kname= ['app', 'rhost', 'logTag', 'method', 'reqTime']"
          code => "event.append(Hash[@kname.zip(event['message'].split('<<<'))])"
        }
    } else if [logTag] == "exception" {
        ruby {
           init => "@kname = ['app', 'rhost', 'logTag', 'method', 'msg', 'exception']"
           code => "event.append(Hash[@kname.zip(event['message'].split('<<<'))])"
        }
        mutate {
           remove_field => ["message"]
        }
    } else if [logTag] == "avgTime" {
        ruby {
           init => "@kanme= ['app', 'rhost', 'logTag', 'method', 'allNum', 'avgTime']"
           code => "event.append(Hash[@kname.zip(event['message'].split('<<<'))])"
        }
    }

}
output {
    if [logTag] == "reqTime" {
        elasticsearch {
          hosts => "host"
          document_type => "reqTime"
   		  #template_overwrite => true
	  	  #template => "/home/logstash/logstash/mapping/logstash.json"
          #workers => 3
        }
    } else if [logTag] == "exception" {
        elasticsearch {
          hosts => "host"
          document_type => "exception"
	  	  template_overwrite => true
	  	  template => "/home/logstash/logstash/mapping/logstash.json"
          workers => 3
        }
    } else if [logTag] == "avgTime" {
        elasticsearch {
          hosts => "host"
          document_type => "avgTime"
          #template_overwrite => true
	  	  #template => "/home/logstash/logstash/mapping/logstash.json"
          #workers => 3
        }
    }
    #stdout{codec => json}
    #file {path => "/home/logstash/outputfile/file.log"}
}